РАСЧЕТ ЦЕНТРАЛЬНОСТЕЙ ГРАФА

Список файлов:
*. Параллельная версия: bulat.gmres.mpi.f90
*. Последовательная версия: bulat.gmres.f90
*. Утилита для преобразования матрицы в упакованный формат: 3col2pack.pl
*. Файл параметров gmres.nml
*. Файл с описанием графа, например mathnetEdgelist.txt
*. makefile

Сборка: make для последовательной, make bulat.gmres.mpi для параллельной.
make go собирает и запускает. См. переменные makefile - в частности, NCPUS
задает число процессоров.

Исходные данные: описание графа в трехколоночном формате: метки вершин и вес ребра.
Вес числовой, метки - числа или слова (без пробелов).

Входные данные: матрица в упакованном формате. Это файл с тремя строками:
ненулевые элементы разреженной матрицы, причем диагональные элементы должны
присутствовать (даже если нули); номера столбцов этих элементов; номер (в списке)
первого элемента каждой строки плюс один фиктивный элемент (так что разность n+1-го
и n-го чисел есть число ненулевых элементов в строке).

Трехколоночный формат преобразуется в упакованный утилитой 3col2pack.pl
Она берет на вход имя файла и выводит на STDOUT три строки, 
а на STDERR - размер матрицы и число ненулевых элементов.

ПАРАМЕТРЫ

Параметры расчета задаются в файле gmres.nml
Namelists - это технология считывания значений переменных из файла особой структуры.
В файле должна быть запись такого вида:

&SIZES             !Имя списка параметров, не трогать если не знаешь что делаешь. Это имя используется в коде.
 n= 60967,         !размер матрицы, число уравнений
 nonzero= 298971,  !число ненулевых элементов матрицы или верхнего треугольника. ВАЖНО: диагональные элементы надо включать даже если они нули!
 delta = 1.,       !параметр дельта, начнем с 1: матрица D - W + delta I где W дана, диагональ D содержит строковые суммы W, дельта - число.
 krylov = 7,       !для GMRES
 epsss = 1.d-12,   !для GMRES, точность
 lfil = 30,        !для GMRES
 iwk = 7,          !для предобуславливателя. размер вспомогат.массивов равен iwk*nonzero
 droptol = 1.d-3,  !для GMRES 
 verbose = .false.,!печатать комментарии по ходу дела?
 check = .false.,  !проверять ли решение ситсемы
 maxiter = 1000,   !для GMRES 
 fvcr = 'mathnet.dat',     !файл с ненулевыми и диагональными элементами матрицы (массив), индексы столбцов каждого и номера первого элемента каждой строки; три строки, пробелы разделыют, n элементов в первой и второй строках, nonzero+1 элементов в третьей.
 fres = 'res.mathnet.dat',!файл, куда записать результат
 fgraph = 'Edges_mathnet.dat',!файл, откуда брать метки вершин графа (для выдачи ответа в удобной форме)
/                  !конец списка параметров, должен быть тут

SIZES - это имя неймлиста, оно зашито в коде. 
Записи с другими именами будут игнорироваться, что удобно для хранения в файле нескольких наборов параметров.
n - размер матрицы, он выводится на STDERR утилитой.
nonzero - число ненулевых элементов (включая формально нулевую диагональ!) матрицы, так же на STDERR
delta - параметр дельта из постановки задачи.
Прочие параметры лучше не трогать - это для решателя.
verbose - если .false. , то информация не выводится, а если .true. - то выводится. Это хорошо для отладки и малых задач,
но для больших вывод слишком объемен. Также вводятся решения систем линейных уравнений, а их n и каждое - n чисел. 
Вывод решений - в файл solutions.dat
check - флаг проверки решения системы. Если .true., то матрица умножается на решение и сравнивается с правой частью.

fvcr - строка в апострофах (не более 25 символов), имя файла с матрицей в упакованном формате.
fres - строка в апострофах (не более 25 символов), имя файла для записи результата.
fgraph - строка в апострофах (не более 25 символов), имя файла со списком вершин графа. Формат файла - две колонки, 
номер вершины и ее метка. Порядок вершин должен быть такой же, как в трехколоночном описании (с пропуском повторяющихся).
Для его создания можно применить такой однострочник:

perl -n -a -E 'if(not defined $N{$F[0]}){$N{$F[0]}=$n++; say "$n $F[0]"}' EdgesOfGraph.txt > Edges.dat

На его вход подается 3-колоночное описание графа, на STDOUT выводится список вершин.

Программа выдает центральности списком в файл с тем же именем, что fres с суффиксом .res на всякий случай,
но также в удобном формате в файл fres. Там заголовок и две колонки: метка вершины (до 9 символов) и центральность
в десятичном формате (для больших или малых значений могут быть проблемы - тогда смотрите сырой список).  

Если есть список вершин и их центральностей (две колонки!), то однострочник ниже поможет их сверить. Он принимает два файла,
вывод программы в fres и контрольный файл (метки вершин, конечно, одни и те же) и выводит на STDOUT метку, две центральности
и их разность, а на STDERR - максимальную по модулю разность. 
        perl -n -a -E 'next if /===/; push @{$h{$F[0]}}, $F[1] }{ for(sort keys %h) {$d=abs($h{$_}[0]-$h{$_}[1]);if($d>$max){$max=$d;$m=$_};say"$_ @{$h{$_}} $d"}say STDERR "max diff is $max at node $m"' res.dat centralities.txt > compare.txt

Параллельная версия считала граф с 60967 вершин и 298971 ребер на 40 ядрах около 17 часов (при включенной проверке).

ОПИСАНИЕ ЗАДАЧИ

Матрица смежности графа w задана - в ней веса ребер.
Строим диагональную матрицу D с суммами строк w на диагонали.
Выбираем число дельта (тут d).
Пусть I - единичная матрица. Строим матрицу 

A = D - w + dI.

Выбираем номер вершины s и создаем вектор b_s из нулей с единицей в позиции s.
Решаем систему Ax=b_s.
Находим вектор x=x_s.
Для каждого элемента матрицы w(i,j) вычисляем величину w(i,j)*|x_s(i)-x_s(j)| и находим их сумму CF_s.
Наконец, суммируем все CF_s для всех s.

ОСОбЕННОСТИ РЕАЛИЗАЦИИ

Считывание матрицы и формирование A делают все процессы независимо. Также все процессы преобразуют матрицу предобуславливателем
для улучшения сходимости.
Каждый процесс имеет диапазон чисел s, формирует в цикле вектор b_s, решает систему, вычисляет центральности и копит их.
В конце все накопленные центральности редуцируются на корневой процесс номер 0 путем сложения. В итоге корневой процесс
имеет массив-результат и он выводит его в файл.
Каждый процесс проверяет качество решения системы, но можно для ускорения эту проверку и отключить параметром check. 



