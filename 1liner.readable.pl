#!/usr/bin/perl

use warnings;                   #предупреждения
#use strict;                     #запрет опасных действий, требование объявлять переменные
use 5.10.0;                     #для новых фич, из которых используем только say; если Перл совсем старый, убрать эту строку и заменить say на print, но в конце него добавить ,"\n"

my $s=0; my $n=0;
while(<>) {                     #цикл по строкам файла
   next if /^\s*$/;             #пропуск пустых строк
   @L = split " ";              #разделяем строку на числа по пробелам
   say STDERR "$L[0],$L[0] met twice!" if $m{$L[0]}{$L[1]}; #предупреждаем о дубликатах
   $m{$L[0]}{$L[1]}=$L[2];      #запоминаем метку строки, метку столбца, значение
   $m{$L[0]}{$L[0]}=0;          #добавляем нулевой диагональный элемент
   unless($o{$L[0]}) {          #если метка строки еще не встречалась
	   $O[$s]=$L[0];        #дадим ей номер и сохраним под номером на 1 меньше в массиве на всякий случай
	   $s++;                #сдвинем номер
	   $o{$L[0]}=$s;        #сохраним номер в хеше, чтобы потом определить номер по метке
   };       
}
for $r(@O) {                    #перебираем все сохраненные метки строк
	push@ia,$n+1;           #ставим номер первого элемента строки
	for $c(@O) {            #перебираем все метки столбцов (те же что у строк)
		next unless defined$m{$r}{$c}; #пропускаем, если в матрице этого элемента нет (чаще всего этот случай)
		push @a,$m{$r}{$c};            #сохраняем элемент матрицы в массиве
		$n++;                          #сдвигаем номер
		push @ja, $o{$c};              #сохраняем номер столбца этого элемента
	}
}
push @ia,$n+1;                  #фиктивный последний элемент массива ia 
say STDERR "n:$s\nnz:$n";       #выводим на STDERR число уравнений и ненулевых элементов, включая нулевые на диагонали
say "@a\n@ja\n@ia";             #выводим на STDOUT три массива



sub det {

for $r(@O) {                    #перебираем все сохраненные метки строк
	for $c(@O) {            #перебираем все метки столбцов (те же что у строк)
		next unless defined$m{$r}{$c}; #пропускаем, если в матрице этого элемента нет (чаще всего этот случай)
		push @a,$m{$r}{$c};            #сохраняем элемент матрицы в массиве
		$n++;                          #сдвигаем номер
		push @ja, $o{$c};              #сохраняем номер столбца этого элемента
	}
}
}

=head1

Утилита для преобразования матрицы смежности графа (три столбца - метки вершин и вес ребра) в упакованный формат. 
На вход 3-колоночный файл, на STDOUT три строки (ненулевые элементы матрицы и диагональ независимо от того ноль ли там,
номера столбцов этих элементов и номера первых ненулевых элементов каждой строки). Диагональ считается ненулевой, даже
если там нули - эти нули входят в список. На STDERR выводится размер матрицы и число ненулевых элементов в ней.o

=cut


#116/EdgesOfGraph6.txt > 116.dat
